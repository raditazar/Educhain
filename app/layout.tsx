"use client"
import type { Metadata } from "next";
import "./globals.css";
import localFont from "next/font/local";
import Navbar from "./components/Navbar";
import '@rainbow-me/rainbowkit/styles.css';
import {
  getDefaultConfig,
  RainbowKitProvider,
} from '@rainbow-me/rainbowkit';
import { WagmiProvider } from 'wagmi';
import {
  mainnet,
} from 'wagmi/chains';
import {
  QueryClientProvider,
  QueryClient,
} from "@tanstack/react-query";

import { defineChain } from 'viem'
 
export const educhain_Testnet = defineChain({
  id: 656476,
  name: 'Educhain Testnet',
  nativeCurrency: {
    decimals: 18,
    name: 'EDU',
    symbol: 'EDU',
  },
  rpcUrls: {
    default: {
      http: ['https://rpc.open-campus-codex.gelato.digital'],
      webSocket: ['wss://rpc.open-campus-codex.gelato.digital'],
    },
  },
  blockExplorers: {
    default: { name: 'Explorer', url: 'https://edu-chain-testnet.blockscout.com/' },
  },
})

const queryClient = new QueryClient();

const config = getDefaultConfig({
  appName: 'My RainbowKit App',
  projectId: 'YOUR_PROJECT_ID',
  chains: [educhain_Testnet],
  ssr: true, // If your dApp uses server side rendering (SSR)
});

const jakartaSans = localFont({
  src: [
    {
      path: './fonts/PlusJakartaSans-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
    {
      path: './fonts/PlusJakartaSans-SemiBold.ttf',
      weight: '600',
      style: 'normal',
    },
    {
      path: './fonts/PlusJakartaSans-Medium.ttf',
      weight: '500',
      style: 'normal',
    },
    {
      path: './fonts/PlusJakartaSans-Regular.ttf',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/PlusJakartaSans-Light.ttf',
      weight: '200',
      style: 'normal',
    },
  ],
  variable: '--font-jakarta-sans',
})

// export const metadata: Metadata = {
//   title: "Edugram",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        <RainbowKitProvider>
          {/* Your App */}
    <html lang="en">
      <body
        className={`${jakartaSans.variable} flex flex-col min-h-screen`} 
      >
        <Navbar />
        <main className="flex-1 overflow-auto">{children}</main>
        
      </body>
    </html>
        </RainbowKitProvider>
      </QueryClientProvider>
    </WagmiProvider>
  );
}
